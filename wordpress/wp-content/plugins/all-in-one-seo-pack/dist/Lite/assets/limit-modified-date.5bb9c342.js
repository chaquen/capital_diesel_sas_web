import{n as u,V as _}from"./js/vueComponentNormalizer.58b0a173.js";import"./js/index.4a5acef5.js";import{e as p}from"./js/elemLoaded.b1f6e29c.js";import{s as f}from"./js/attachments.52d4e34c.js";import{S as w}from"./js/Standalone.8b8c1fe5.js";import{g as r,s as h}from"./js/index.4776f7d5.js";import"./js/client.d00863cc.js";import"./js/_commonjsHelpers.10c44588.js";import"./js/translations.3bc9d58c.js";import"./js/default-i18n.0e73c33c.js";import"./js/constants.9efee5f7.js";import"./js/isArrayLikeObject.5268a676.js";import"./js/portal-vue.esm.272b3133.js";import"./js/cleanForSlug.788b395f.js";var v=function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.currentPost.id?i("div",[i("span",{staticClass:"components-checkbox-control__input-container"},[i("input",{directives:[{name:"model",rawName:"v-model",value:t.currentPost.limit_modified_date,expression:"currentPost.limit_modified_date"}],staticClass:"components-checkbox-control__input",attrs:{id:"aioseo-limit-modified-date-input",type:"checkbox"},domProps:{checked:Array.isArray(t.currentPost.limit_modified_date)?t._i(t.currentPost.limit_modified_date,null)>-1:t.currentPost.limit_modified_date},on:{change:[function(m){var o=t.currentPost.limit_modified_date,s=m.target,l=!!s.checked;if(Array.isArray(o)){var a=null,n=t._i(o,a);s.checked?n<0&&t.$set(t.currentPost,"limit_modified_date",o.concat([a])):n>-1&&t.$set(t.currentPost,"limit_modified_date",o.slice(0,n).concat(o.slice(n+1)))}else t.$set(t.currentPost,"limit_modified_date",l)},t.addLimitModifiedDateAttribute]}}),t.canShowSvg?i("svg",{staticClass:"components-checkbox-control__checked",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",width:"24",height:"24",role:"img","aria-hidden":"true",focusable:"false"}},[i("path",{attrs:{d:"M18.3 5.6L9.9 16.9l-4.6-3.4-.9 1.2 5.8 4.3 9.3-12.6z"}})]):t._e()]),i("label",{staticClass:"components-checkbox-control__label",attrs:{for:"aioseo-limit-modified-date-input"}},[t._v(t._s(t.strings.label))])]):t._e()},P=[];const g={mixins:[w],data(){return{strings:{label:this.$t.__("Don't update the modified date",this.$td)}}},methods:{addLimitModifiedDateAttribute(){!r()||window.wp.data.dispatch("core/editor").editPost({aioseo_limit_modified_date:this.currentPost.limit_modified_date})}},computed:{canShowSvg(){return r()&&this.currentPost.limit_modified_date}},watch:{"currentPost.limit_modified_date"(t){this.$bus.$emit("standalone-update-post",{limit_modified_date:t})}}},d={};var x=u(g,v,P,!1,y,null,null,null);function y(t){for(let e in d)this[e]=d[e]}const b=function(){return x.exports}();if(r()&&window.wp){const{createElement:t}=window.wp.element,{registerPlugin:e}=window.wp.plugins,{PluginPostStatusInfo:i}=window.wp.editPost;e("aioseo-limit-modified-date",{render:()=>t(i,{},t("div",{id:"aioseo-limit-modified-date"}))})}const c=()=>{new _({store:h,render:t=>t(b)}).$mount("#aioseo-limit-modified-date")};f()&&window.aioseo&&window.aioseo.currentPost&&window.aioseo.currentPost.context==="post"&&(document.getElementById("aioseo-limit-modified-date")?c():(p("#aioseo-limit-modified-date","aioseoLimitModifiedDate"),document.addEventListener("animationstart",function(e){e.animationName==="aioseoLimitModifiedDate"&&c()},{passive:!0})));
